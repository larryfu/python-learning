from PIL import Image, ImageDraw
import input_data
import numpy as np


def get_image(path):
    im = Image.open(path)
    im = im.resize((28, 28))
    im1 = im.convert('L')
    pix = im1.load()
    #im1.save('../3_.jpg')
    width = im1.size[0]
    height = im1.size[1]
    dat = []
    for x in range(width):
        for y in range(height):
            r = pix[y, x]
            v = (255 - r) / 255.0
            dat.append(v)

    data = np.array(dat)
    label = np.array([9])
    label = input_data.dense_to_one_hot(label)
    data = data.reshape(1, 28, 28, 1)
    image_data = input_data.DataSet(data, label)
    return image_data

def get_image_1(path):
    im = Image.open(path)
    im = im.resize((28, 28))
    im = im.convert('L')
    #im1 = im.convert('L')
    pix = im.load()
    #im1.save('../3_.jpg')
    width = im.size[0]
    height = im.size[1]
    dat = [0 for n in range(784)]

    for x in range(width):
        for y in range(height):
            r = pix[x, y]
            v = (255 - r) / 255.0
            dat[y*28+x] = v
    return dat

def array_to_image(arr, filePath):
    im = Image.new('RGB', (28, 28))
    # draw = ImageDraw.Draw(im)

    for x in range(28):
        for y in range(28):
            v = int(255 - (arr[y * 28 + x] * 255))
            im.putpixel((x, y), (v, v, v))
    im.save(filePath)

arr
array_to_image(arr,'../7.jpg')
arr1 = get_image_1('../7.jpg')
for x in arr1:
    print x

#img_data = get_image_1("../3_.jpg")
#for x in img_data:
#    print x
#image = get_image('../9_.jpg')
#mnist = input_data.read_data_sets("MNIST_data/", one_hot=True)
#array_to_image(mnist.test.images[0], '../test1.jpg')
#img0 = mnist.test.images[0]
#for x in range(img0.size):
#    print img0[x]
